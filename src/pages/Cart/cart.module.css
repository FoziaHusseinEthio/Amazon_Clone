/* cart.module.css */

.cartContainer {
  max-width: 1200px; /* Adjust as needed */
  margin: 20px auto;
  padding: 0 20px;
  font-family: "Amazon Ember", Arial, sans-serif;
  background-color: #EAEDED; /* Amazon's light grey page background */
}

.cartPageHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  padding: 20px;
  background-color: #fff;
  border-bottom: 1px solid #DDD;
}

.mainCartTitle {
  font-size: 28px;
  font-weight: 400;
  color: #0F1111;
  margin: 0;
}

.priceColumnHeader {
  font-size: 14px;
  color: #565959;
}

.headerDivider {
  display: none; /* The border-bottom on cartPageHeader serves this purpose */
}

/* --- Empty Cart Styles --- */
.emptyCartSection {
  background-color: #fff;
  padding: 40px 20px;
  text-align: center;
  margin-top: 1px; /* To sit just below header */
}

.emptyCartImage {
  max-width: 200px;
  margin-bottom: 20px;
}

.emptyCartSection h2 {
  font-size: 21px;
  font-weight: 700;
  color: #0F1111;
  margin-bottom: 10px;
}

.shopTodayLink {
  display: inline-block;
  /* background-color: #FFD814; */
  /* border: 1px solid;
  border-color: #FCD200 #F8C100 #F0B700;
  border-radius: 8px; */
  padding: 10px 20px;
  font-size: 14px;
  font-weight: 500;
  color: #0F1111;
  text-decoration: none;
  box-shadow: 0 1px 0 rgba(255,255,255,.4) inset;
  transition: background-color 0.1s ease;
}

.shopTodayLink:hover {
  /* background-color: #F7CA00; */
    color: #0088f7;

}

/* --- Cart with Items Layout --- */
.cartLayout {
  display: flex;
  flex-direction: row;
  gap: 20px;
  margin-top: 1px; /* To sit below header */
  padding-top: 20px; /* Add padding here if cartContainer has 0 padding */
}

.cartItemsSection {
  flex-grow: 1;
  background-color: #fff;
  padding: 0 20px 20px 20px; /* Add padding only if cartLayout doesn't have it */
}

/* --- Individual Product Item in Cart --- */
.productItem {
  display: flex;
  border-bottom: 1px solid #DDD;
  padding: 20px 0;
}

.productItem:last-child {
  border-bottom: none;
}

.productDetailsArea {
  flex-grow: 1;
  display: flex;
  flex-direction: column; /* ProductCard above actions */
}

/* Wrapper for ProductCard to control its scale/appearance in cart */
.cartItemProductCardWrapper {
  display: flex; /* This helps contain the ProductCard with flex=true */
  margin-bottom: 10px;
}

/*
  Since ProductCard uses 'flex=true', it will try to apply its 'productFlexed' styles.
  We need to adjust these for the cart context.
  Assuming ProductCard's CSS module styles are globally unique due to hashing,
  we target its expected structure if direct overrides are hard.
  If ProductCard's styles are NOT globally unique (e.g. pure CSS not CSS Modules),
  then more specific selectors from cart.module.css might be needed.

  Let's assume ProductCard's .productFlexed class and its children are applied.
  We want to make the image part smaller and the content part adapt.
*/
.cartItemProductCardWrapper > div { /* Targets the ProductCard's main div with .productFlexed */
  gap: 15px !important; /* Reduce gap between image and content */
  padding: 0 !important; /* Remove ProductCard's internal padding if any */
  border: none !important; /* Remove ProductCard's border */
  box-shadow: none !important; /* Remove ProductCard's shadow */
  max-width: 100% !important; /* Allow it to fit */
}

.cartItemProductCardWrapper .imageLinkWrapper,
.cartItemProductCardWrapper .imageContainer {
  flex: 0 0 200px !important; /* Fixed smaller width for image container */
  max-width: 200px !important;
  height: 200px !important; /* Fixed height */
  max-height: 200px !important;
  padding: 0 !important;
  border: 1px solid #eee !important; /* Optional border for image */
  margin-right: 15px !important; /* Space next to image */
}

.cartItemProductCardWrapper .productImage {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

.cartItemProductCardWrapper .content {
  padding-top: 0 !important; /* Adjust padding if needed */
  gap: 5px !important; /* Reduce gap in content */
}

.cartItemProductCardWrapper .title {
  font-size: 16px !important; /* Smaller title for cart */
  -webkit-line-clamp: 2 !important; /* Max 2 lines for title in cart */
  margin-bottom: 4px !important;
}

.cartItemProductCardWrapper .ratingAndPriceContainer {
  padding-bottom: 8px !important;
  margin-bottom: 8px !important;
  border-bottom: none !important; /* Remove internal separator if any */
}

.cartItemProductCardWrapper .ratingContainer {
  margin-bottom: 4px !important;
}
.cartItemProductCardWrapper .ratingContainer .MuiRating-root { /* Target MUI Rating */
  font-size: 1rem !important; /* Smaller stars */
}
.cartItemProductCardWrapper .ratingCount {
  font-size: 12px !important;
}


/* Hide the price within ProductCard's content, as we have a separate price column */
.cartItemProductCardWrapper .price {
  display: none !important;
}

.cartItemProductCardWrapper .descriptionDetail {
  font-size: 13px !important; /* Smaller description */
  line-height: 1.4 !important;
  max-height: 4.2em !important; /* Approx 3 lines */
  overflow: hidden !important;
  margin-bottom: 0 !important;
}
.cartItemProductCardWrapper .descriptionDetail h4 {
  display: none !important; /* Hide "About this item" in cart */
}
.cartItemProductCardWrapper .descriptionDetail p,
.cartItemProductCardWrapper .descriptionDetail ul {
  font-size: 13px !important;
  margin-bottom: 0 !important;
}


.itemActions {
  display: flex;
  align-items: center;
  gap: 15px; /* Space between quantity and links */
  margin-top: 8px; /* Space above actions */
  padding-left: 5px; /* Align with ProductCard content if image has margin */
}

.quantityControls {
  display: flex;
  align-items: center;
  /* background-color: #f0f2f2; */
  /* border: 1px solid #adb1b8; */
  /* border-radius: 4px; */
  /* box-shadow: 0 1px 2px rgba(0,0,0,0.1) inset; */
}

.quantityButton {
  background-color: transparent;
  border: none;
  color: #0F1111;
  font-size: 18px;
  font-weight: 400;
  padding: 4px 10px;
  cursor: pointer;
  line-height: 1;
}
.quantityButton:hover {
  background-color: #e3e6e6;
}

.decrementButton {
  border-right: 1px solid #adb1b8;
}

.incrementButton {
  border-left: 1px solid #adb1b8;
}

.deleteIcon {
  font-size: 14px;
  color: #007185; /* Amazon's link blue, or use a red for delete */
  vertical-align: middle;
}
.quantityButton:hover .deleteIcon {
  color: #C7511F;
}


.quantityAmount {
  padding: 4px 10px;
  font-size: 14px;
  min-width: 20px;
  text-align: center;
}

.actionLink {
  font-size: 12px;
  color: #007185;
  cursor: pointer;
  text-decoration: none;
  padding: 0 5px;
  position: relative;
}
.actionLink:not(:last-child)::after { /* Separator */
  content: "|";
  position: absolute;
  right: -5px; /* Adjust as needed */
  color: #DDD;
}


.actionLink:hover {
  text-decoration: underline;
  color: #C7511F;
}

.itemPrice {
  font-size: 18px;
  font-weight: 700;
  color: #0F1111;
  margin-left: 20px; /* Space from details area */
  white-space: nowrap; /* Prevent price from wrapping */
  text-align: right;
  min-width: 80px; /* Ensure some space for price */
}

.cartListSubtotal {
  text-align: right;
  padding-top: 20px;
  font-size: 18px;
  color: #0F1111;
}

.subtotalAmount {
  font-weight: 700;
}

/* --- Checkout Panel --- */
.checkoutPanel {
  width: 280px; /* Fixed width for checkout panel */
  flex-shrink: 0; /* Prevent shrinking */
  background-color: #fff;
  padding: 20px;
  border: 1px solid #DDD; /* Add border similar to Amazon */
  border-radius: 4px; /* Softer radius */
  align-self: flex-start; /* Align to top of flex container */
  box-sizing: border-box;
  height: fit-content; /* Only take up needed height */
}

.checkoutSubtotal {
  font-size: 16px; /* Amazon uses slightly smaller font here */
  color: #0F1111;
  margin-bottom: 10px;
  line-height: 1.5;
}

.subtotalAmountBold {
  font-weight: 700;
}

.giftOption {
  display: flex;
  align-items: center;
  margin-bottom: 20px;
}

.giftCheckbox {
  margin-right: 8px;
  width: 15px;
  height: 15px;
}

.giftLabel {
  font-size: 14px;
  color: #0F1111;
}

.proceedToCheckoutButton {
  display: block;
  width: 100%;
  background-color: #FFD814;
  border: 1px solid;
  border-color: #FCD200 #F8C100 #F0B700;
  border-radius: 8px;
  padding: 10px 0;
  font-size: 14px;
  font-weight: 500;
  color: #0F1111;
  text-align: center;
  text-decoration: none;
  box-shadow: 0 1px 0 rgba(255,255,255,.4) inset;
  transition: background-color 0.1s ease;
}

.proceedToCheckoutButton:hover {
  background-color: #F7CA00;
}

/* --- "Your Items" Section (Below Cart) --- */
.yourItemsSection {
  margin-top: 20px;
  background-color: #fff;
  padding: 20px;
}

.yourItemsTitle {
  font-size: 21px;
  font-weight: 700;
  color: #0F1111;
  margin: 0 0 15px 0;
}

.yourItemsTabs {
  display: flex;
  border-bottom: 1px solid #DDD;
  margin-bottom: 15px;
}

.yourItemsTab {
  background: none;
  border: none;
  padding: 10px 15px;
  font-size: 14px;
  color: #565959;
  cursor: pointer;
  border-bottom: 2px solid transparent;
  margin-bottom: -1px; /* To align with container's border */
}

.yourItemsTab.activeTab {
  color: #0F1111;
  font-weight: 700;
  border-bottom-color: #C7511F; /* Amazon orange for active tab */
}

.yourItemsContent {
  font-size: 14px;
  color: #565959;
  padding: 10px 0;
}

/* Responsive adjustments */
@media (max-width: 900px) {
  .cartLayout {
    flex-direction: column-reverse; /* Stack checkout panel above items on mobile */
  }
  .checkoutPanel {
    width: 100%; /* Full width on smaller screens */
    margin-bottom: 20px;
  }
  .priceColumnHeader {
    display: none; /* Often hidden on mobile */
  }
  .productItem {
    flex-direction: column; /* Stack item price below details */
  }
  .itemPrice {
    text-align: left;
    margin-left: 0;
    margin-top: 10px; /* Space above price when stacked */
    padding-left: calc(120px + 15px); /* Align price with ProductCard content roughly */
  }
  .cartItemProductCardWrapper .imageContainer {
    flex: 0 0 100px !important;
    max-width: 100px !important;
    height: 100px !important;
    max-height: 100px !important;
  }
  .cartItemProductCardWrapper .title {
    font-size: 15px !important;
  }
  .cartItemProductCardWrapper .descriptionDetail {
    font-size: 12px !important;
  }
  .itemActions {
    flex-wrap: wrap; /* Allow action links to wrap */
  }
}

@media (max-width: 600px) {
  .cartContainer {
    padding: 0 10px;
  }
  .cartPageHeader {
    padding: 15px;
  }
  .mainCartTitle {
    font-size: 22px;
  }
  .cartItemsSection, .checkoutPanel, .yourItemsSection {
    padding: 15px;
  }
  .itemPrice {
    padding-left: 0; /* Simpler alignment on very small screens */
    text-align: right; /* Back to right if taking full width effectively */
    margin-top: 15px;
    font-size: 17px;
  }
  .cartItemProductCardWrapper {
    flex-direction: column; /* Stack image above content in ProductCard for very small screens */
  }
  .cartItemProductCardWrapper .imageContainer {
    margin-right: 0 !important;
    margin-bottom: 10px !important;
    width: 100% !important; /* Full width for image if stacked */
    max-width: 150px !important; /* But constrain it */
    height: 150px !important;
    align-self: center;
  }
  .cartItemProductCardWrapper .content {
    text-align: center; /* Center content if image is stacked above */
  }
  .itemActions {
    justify-content: center; /* Center actions */
    padding-left: 0;
  }
  .cartListSubtotal {
    font-size: 16px;
  }
  .proceedToCheckoutButton {
    font-size: 16px; /* Larger tap target */
  }
}
/* cart.module.css */

/* ... (other styles remain the same) ... */

/* MODIFIED: Image container size in cart item */
.cartItemProductCardWrapper .imageLinkWrapper,
.cartItemProductCardWrapper .imageContainer {
  flex: 0 0 100px !important; /* New smaller width for image container */
  max-width: 100px !important;
  height: 100px !important; /* New smaller height */
  max-height: 100px !important;
  padding: 0 !important;
  border: 1px solid #eee !important;
  margin-right: 15px !important;
}

/* ... (other styles for .cartItemProductCardWrapper and its children might need minor tweaks if layout breaks) ... */

/* MODIFIED: Item Actions alignment (if image size change affects it) */
.itemActions {
  display: flex;
  align-items: center;
  gap: 15px;
  margin-top: 8px;
  /* If ProductCard's content starts after the image, and image width changed,
     this padding might need adjustment if you want precise alignment.
     For 100px image + 15px margin-right, the content effectively starts at 115px.
     If ProductCard's internal content has no padding, then this could be:
     padding-left: calc(100px + 15px);
     However, given ProductCard has its own structure, it's often better
     to let the natural flow handle this or add padding to the
     .cartItemProductCardWrapper .content itself if needed.
     For simplicity, I'm keeping it as is, but be mindful of this alignment.
  */
  padding-left: 5px; /* Existing rule, might need review based on visual outcome */
}


/* ... (other styles remain the same) ... */

/* Responsive adjustments */
@media (max-width: 900px) {
  /* ... (other responsive styles) ... */

  .itemPrice {
    text-align: left;
    margin-left: 0;
    margin-top: 10px;
    /* MODIFIED: Adjust padding-left based on new image width (100px) + margin (15px) */
    padding-left: calc(100px + 15px);
  }

  /* MODIFIED: If image size changed, this rule might also need tweaking
     but it was already smaller than the new default.
     Let's keep it as it was, which is 100px. */
  .cartItemProductCardWrapper .imageContainer {
    /* This rule applies when cartLayout stacks.
       The previous image size was 100px here. This is consistent with new default. */
    /* flex: 0 0 100px !important; This was in your previous CSS under @media (max-width: 900px)
       max-width: 100px !important;
       height: 100px !important;
       max-height: 100px !important;
       No changes needed here if it was already 100px.
       If it wasn't there, the general rule (now 100px) applies.
    */
  }
}

@media (max-width: 600px) {
  /* ... (other responsive styles) ... */

  /* MODIFIED: Image size for very small (stacked) view */
  .cartItemProductCardWrapper .imageContainer {
    margin-right: 0 !important;
    margin-bottom: 10px !important;
    width: 100% !important;
    max-width: 120px !important; /* New max-width for stacked image (was 150px) */
    height: 120px !important;    /* New height for stacked image (was 150px) */
    align-self: center;
  }
}

/* Ensure product image itself scales correctly within its container */
.cartItemProductCardWrapper .productImage {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain; /* This remains crucial */
}




/* cart.module.css */

/* ... (other styles like .cartContainer, .cartPageHeader etc. should remain) ... */

.productItem {
  display: flex;
  border-bottom: 1px solid #DDD;
  padding: 16px 0; /* Adjusted padding */
}

.productDetailsArea {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: 10px; /* Space between the product info and the action buttons */
}

.cartItemProductCardWrapper {
  display: flex; /* This is the direct parent for ProductCard in the cart item */
  /* No specific styling needed here, the magic happens on ProductCard's elements */
}

/*
  Aggressively override ProductCard styles when flex=true and it's inside cartItemProductCardWrapper.
  We target the structure ProductCard creates for its flexed view.
*/

/* Main ProductCard container (.productFlexed) override */
.cartItemProductCardWrapper > div[class*="_productFlexed"] {
  display: flex !important;
  flex-direction: row !important; /* Image and content side-by-side */
  align-items: flex-start !important; /* Align to the top */
  gap: 12px !important;           /* Space between small image and its text content */
  padding: 0 !important;          /* Remove ProductCard's default padding */
  border: none !important;        /* Remove ProductCard's default border */
  box-shadow: none !important;    /* Remove ProductCard's default shadow */
  max-width: 100% !important;
  background-color: transparent !important;
}

/* Image area within ProductCard - MAKING IT VERY SMALL */
.cartItemProductCardWrapper div[class*="_productFlexed"] a[class*="_imageLinkWrapper"],
.cartItemProductCardWrapper div[class*="_productFlexed"] div[class*="_imageContainer"] {
  flex: 0 0 120px !important;     /* Fixed small width for the image area */
  width: 120px !important;
  height: 120px !important;       /* Fixed small height for the image area */
  max-width: 120px !important;
  max-height: 120px !important;
  padding: 0 !important;         /* No padding inside the small image container */
  border: 1px solid #e0e0e0 !important; /* Light border for the image box */
  border-radius: 3px !important;
  margin: 0 !important;          /* Reset margin */
  display: flex !important;      /* For centering image if it's smaller */
  align-items: center !important;
  justify-content: center !important;
  overflow: hidden !important;   /* Clip image if it tries to overflow */
}

/* The actual image tag */
.cartItemProductCardWrapper div[class*="_productFlexed"] img[class*="_productImage"] {
  max-width: 100% !important;
  max-height: 100% !important;
  object-fit: contain !important; /* Ensures the whole image is visible, scaled down */
  border-radius: 2px !important;
}

/* Content area within ProductCard */
.cartItemProductCardWrapper div[class*="_productFlexed"] div[class*="_content"] {
  flex: 1 !important; /* Takes remaining space next to the small image */
  padding: 0 !important;
  display: flex !important;
  flex-direction: column !important;
  justify-content: flex-start !important;
  gap: 3px !important; /* Minimal gap between title and other tiny bits of info */
}

/* Title within ProductCard */
.cartItemProductCardWrapper div[class*="_productFlexed"] h3[class*="_title"] {
  font-size: 14px !important;
  font-weight: 700 !important; /* Bolder like Amazon cart titles */
  color: #0F1111 !important;
  line-height: 1.3 !important;
  margin: 0 0 2px 0 !important; /* Minimal margin */
  -webkit-line-clamp: 2 !important; /* Max 2 lines for title */
  -webkit-box-orient: vertical !important;
  overflow: hidden !important;
  text-overflow: ellipsis !important;
}

/* HIDE elements from ProductCard not needed in the compact cart view */
.cartItemProductCardWrapper div[class*="_productFlexed"] div[class*="_ratingAndPriceContainer"],
.cartItemProductCardWrapper div[class*="_productFlexed"] div[class*="_ratingContainer"],
.cartItemProductCardWrapper div[class*="_productFlexed"] div[class*="_price"], /* Hide ProductCard's internal price */
.cartItemProductCardWrapper div[class*="_productFlexed"] div[class*="_descriptionDetail"] h4 /* Hide "About this item" heading */
 {
  display: none !important;
}

/* Description from ProductCard - make it very brief or hide if not needed */
.cartItemProductCardWrapper div[class*="_productFlexed"] div[class*="_descriptionDetail"] {
  display: block !important; /* Or 'none !important;' if you want no description from ProductCard */
  font-size: 12px !important;
  color: #565959 !important;
  line-height: 1.4 !important;
  margin: 0 !important;
  -webkit-line-clamp: 1 !important; /* Max 1 line for a brief snippet */
  -webkit-box-orient: vertical !important;
  overflow: hidden !important;
  text-overflow: ellipsis !important;
}
.cartItemProductCardWrapper div[class*="_productFlexed"] div[class*="_descriptionDetail"] p,
.cartItemProductCardWrapper div[class*="_productFlexed"] div[class*="_descriptionDetail"] ul {
    margin: 0 !important;
    padding: 0 !important;
    list-style: none !important;
    font-size: 12px !important; /* Ensure consistency */
}

/* --- Item Actions (Quantity, Delete links) --- */
/* These are styled independently as they are outside the ProductCard component */
.itemActions {
  display: flex;
  align-items: center;
  flex-wrap: wrap; /* Allow actions to wrap on smaller widths if needed */
  gap: 10px 15px; /* Row gap and column gap */
  /* margin-top is handled by gap in productDetailsArea */
}

/* ... (rest of your .itemActions, .quantityControls, .actionLink styles should be fine or require minor tweaks) ... */

/* Price column (right side of cart item) */
.itemPrice {
  font-size: 16px; /* Slightly smaller than main product page price */
  font-weight: 700;
  color: #0F1111;
  margin-left: 16px;
  white-space: nowrap;
  text-align: right;
  min-width: 70px; /* Adjust as needed */
  align-self: flex-start; /* Align to top with the small image/text */
}


/* Responsive adjustments */
@media (max-width: 900px) {
  .cartLayout {
    flex-direction: column-reverse;
  }
  .checkoutPanel {
    width: 100%;
    margin-bottom: 20px;
  }
  .priceColumnHeader {
    display: none;
  }
  .productItem {
    /* For mobile, we might want product details and price on separate visual lines or adjust layout further */
  }
  .itemPrice {
    /* If stacked on mobile, how should price align? */
    text-align: left; /* Or right, depending on design */
    margin-left: 0;
    margin-top: 8px;
    /* If we want it under the action buttons, which are under product details: */
    /* Example: align with start of product details, after image (70px) + gap (12px) */
    /* padding-left: calc(70px + 12px); */ /* This can be tricky */
  }
}

@media (max-width: 600px) {
  .cartContainer {
    padding: 0 10px;
  }
  .mainCartTitle {
    font-size: 20px;
  }

  /* On very small screens, ProductCard image and content might stack if we change its flex-direction */
  .cartItemProductCardWrapper div[class*="_productFlexed"] {
    /* flex-direction: column !important; */ /* Example: if you wanted to stack image above text */
    /* align-items: center !important;   */
  }
  .cartItemProductCardWrapper div[class*="_productFlexed"] a[class*="_imageLinkWrapper"],
  .cartItemProductCardWrapper div[class*="_productFlexed"] div[class*="_imageContainer"] {
    /* If stacking image above text, image might become full width of its small parent */
    /* flex: 0 0 auto !important; width: 80px !important; height: 80px !important; */ /* Or adjust as needed */
  }

  .itemPrice {
    font-size: 15px;
    padding-left: 0; /* Simpler on small screens */
    text-align: right; /* Common for price on mobile */
  }
}